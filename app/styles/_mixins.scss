@mixin inline-block($valign: false) {
    display: inline-block;
    *display: inline;
    zoom: 1;

    @if $valign == true {
        vertical-align: middle;
    }
}

@mixin transition($property:all, $time:0.2s, $method:ease-in-out) {
    -webkit-transition: $property $time $method;
       -moz-transition: $property $time $method;
        -ms-transition: $property $time $method;
         -o-transition: $property $time $method;
            transition: $property $time $method;
}

@mixin transform($property) {
    -webkit-transform: $property;
       -moz-transform: $property;
        -ms-transform: $property;
         -o-transform: $property;
            transform: $property;
}

@mixin box-shadow($left, $top, $blur, $color, $inset:"") {
    -webkit-box-shadow: $left $top $blur $color #{$inset};
       -moz-box-shadow: $left $top $blur $color #{$inset};
            box-shadow: $left $top $blur $color #{$inset};
}

@mixin gradient($color1, $color2) {
    background-color: $color1;
    background-image: -webkit-gradient(linear,left top,left bottom,from($color1),to($color2));
    background-image: -webkit-linear-gradient(top,$color1 0,$color2 100%);
    background-image: -o-linear-gradient(top,$color1 0,$color2 100%);
    background-image: -moz-linear-gradient(top,$color1 0,$color2 100%);
    background-image: linear-gradient(to bottom,$color1 0,$color2 100%);
    filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='{$color1}', endColorstr='{$color2}', GradientType=0);
    background-repeat: repeat-x;
}
